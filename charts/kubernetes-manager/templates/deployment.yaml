{{- if .Values.createDeployment -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        revision: {{ .Release.Revision | quote }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9000'
    spec:
      serviceAccountName: {{ .Release.Name }}
{{ if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
{{ end }}
{{ if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{ end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Release.Name }}
            topologyKey: kubernetes.io/hostname
      volumes:
      - name: config
        configMap:
          name: {{ .Release.Name }}-config
      containers:
      - name: {{ .Release.Name }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 30001
          runAsGroup: 30001
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        resources:
{{ toYaml .Values.resources | indent 9 }}
        image: {{ .Values.registry.image }}
        imagePullPolicy: {{ .Values.registry.imagePullPolicy }}
        env:
{{ include "env" . | nindent 8 }}
        args:
{{ include "args" . | nindent 8 }}
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: config
          mountPath: /config
        readinessProbe:
          httpGet:
            path: /api/ready
            port: 9000
          initialDelaySeconds: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /api/healthz
            port: 9000
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  type: {{ .Values.service.type }}
  ports:
  - port: 9000
    protocol: TCP
  selector:
    app: {{ .Release.Name }}
{{ if .Values.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
{{- if .Values.ingress.annotations }}
  annotations:
{{ toYaml .Values.ingress.annotations | indent 4 }}
{{- end }}
spec:
  tls:
  - hosts:
    - {{ .Values.ingress.host | quote }}
  rules:
  - host: {{ .Values.ingress.host | quote }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}
            port:
              number: 9000
{{ end }}
{{- end -}}